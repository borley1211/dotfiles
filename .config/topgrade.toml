# Don't pull the predefined git repos
# predefined_git_repos = false

# Disable specific steps - same options as the command line flag
disable = ["gnome_shell_extensions", "shell"]

# Run specific steps - same options as the command line flag
#only = ["system", "emacs"]

# Do not ask to retry failed steps (default: false)
#no_retry = true

# Run inside tmux
#run_in_tmux = true

# List of remote machines with Topgrade installed on them
#remote_topgrades = ["toothless", "pi", "parnas"]

# Arguments to pass SSH when upgrading remote systems
ssh_arguments = "-o ConnectTimeout=2"

# Arguments to pass tmux when pulling Repositories
#tmux_arguments = "-S /var/tmux.sock"

# Arguments to pass yay when updating packages
#yay_arguments = "--nodevel"

# Manually select Windows updates
# accept_all_windows_updates = false

# Cleanup temporary or old files
cleanup = true

# Do not set the terminal title
#set_title = false

[git]
# Additional git repositories to pull
repos = [
    "~/Dotfiles",
]

# Arguments to pass Git when pulling Repositories
#arguments = "--rebase --autostash"

[composer]
#self_update = true

# Commands to run before anything
[pre_commands]
#"Update NodeJS by N Package" = "n lts && npm --version; exit 0"
#"pyenv" = "pyenv update; exit 0"
#"anyenv" = "anyenv update; exit 0"
#"nodenv version list" = 'which nodenv && git -C "$(nodenv root)"/plugins/node-build pull'

# Custom commands
[commands]
#"10. Update pip" = "python -m pip install -U --upgrade-strategy eager pip"
"20. Update Python Core Packages" = "python -m pip install -U --upgrade-strategy eager poetry hatch setuptools certifi johnnydep neovim vim-vint"
#"Python envs" = "poetry update"
"10. Update nodejs by Volta" = "volta install node" # install node@lts
"20. Update npm globally" = "npm install -g npm"
"30. Check nodejs pkgs" = "npm doctor; npm audit fix"

[linux]
# Arch Package Manager to use. Allowed values: autodetect, trizen, paru, yay, pacman.
#arch_package_manager = "pacman"
# Arguments to pass yay (or paru) when updating packages
#yay_arguments = "--nodevel"
#show_arch_news = true
#trizen_arguments = "--devel"
#enable_tlmgr = true
#emerge_sync_flags = "-q"
#emerge_update_flags = "-uDNa --with-bdeps=y world"
#redhat_distro_sync = false
#rpm_ostree = false
