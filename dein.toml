[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
#build = 'make'
hook_post_update = '''
if has('win32')
    let cmd = 'tools\\update-dll-mingw'
elseif has('win32unix') " for Cygwin
    let cmd = 'make -f make_cygwin.mak'
elseif executable('gmake')
    let cmd = 'gmake'
else
    let cmd = 'make'
endif
let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'vim-syntastic/syntastic'
hook_add = '''
let g:syntastic_vim_checkers = ["vint"]
let g:syntastic_enable_signs=1
let g:syntastic_auto_loc_list=2
let g:syntastic_mode_map = {'mode': 'passive'}
augroup AutoSyntastic
    autocmd!
    autocmd InsertLeave,TextChanged * call s:syntastic() 
augroup END
function! s:syntastic()
    w
    SyntasticCheck
endfunction
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {'colorscheme': 'wombat'}
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'Shougo/deol.nvim'

[[plugins]]
if = 0
repo = 'Shougo/denite.nvim'
hook_add = '''
" Define mappings
autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q denite#do_map('quit')
  nnoremap <silent><buffer><expr> i denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
endfunction
'''

# 補完
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['roxma/nvim-yarp', 'roxma/vim-hug-neovim-rpc']
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    let g:deoplete#enable_smart_case = 1
'''
on_i = 1

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'ncm2/ncm2'
hook_source = '''
autocmd BufEnter * call ncm2#enable_for_buffer()
set completeopt=noinsert,menuone,noselect
'''
if = 0

# ZShell
[[plugins]]
repo = 'zchee/deoplete-zsh'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'powerline/powerline'

# LSP Manager
[[plugins]]
repo = 'neoclide/coc.nvim'
merge = 0
on_i = 1
rev = 'release'

# TOML
[[plugins]]
repo = 'cespare/vim-toml'

# Async Lint Engine
[[plugins]]
repo = 'w0rp/ale'

# Syntax Highlighting Tool
[[plugins]]
repo = 'sheerun/vim-polyglot'

# LanguageClient
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = '''
if has('win32')
    let cmd = 'pwsh.exe -ExecutionPolicy bypass -File install.ps1'
else
    let cmd = 'bash install.sh'
endif
let g:dein#plugin.build = cmd
'''
if = 0

# Vim emoji
[[plugins]]
repo = 'junegunn/vim-emoji'

# PostFix ext
[[plugins]]
repo = 'mattn/vim-sonictemplate'
